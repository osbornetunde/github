{"version":3,"sources":["time.js","icon.js","filename.js","commitMessage.js","fileItem.js","index.js"],"names":["Time","_ref","time","timeString","moment","fromNow","react_default","a","createElement","className","FileIcon","icon","file","type","concat","FileName","Fragment","src_icon","name","CommitMessage","commit","message","FileListItem","filename","commitMessage","latestCommit","src_time","updated_at","ReactDOM","render","files","map","fileItem","key","id","document","getElementById"],"mappings":"iLAkBeA,EAbF,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACTC,EAAaC,IAAOF,GAAMG,UAChC,OACCC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACdN,ICcWO,MAlBf,SAAAT,GAA4B,IACtBU,EAAO,cAKZ,MAJiB,WAFUV,EAARW,KAEXC,OACPF,EAAO,aAIPL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAS,OAAAK,OAASH,OCITI,MAbf,SAAAd,GAA4B,IAARW,EAAQX,EAARW,KACnB,OACCN,EAAAC,EAAAC,cAACF,EAAAC,EAAMS,SAAP,KACCV,EAAAC,EAAAC,cAACS,EAAD,CAAUL,KAAMA,IAChBN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaG,EAAKM,QCQtBC,EAVQ,SAAAlB,GAAA,IAAGmB,EAAHnB,EAAGmB,OAAH,OACtBd,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACdW,EAAOC,UCeKC,EAjBM,SAAArB,GAAA,IAAGW,EAAHX,EAAGW,KAAH,OACjBN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACe,EAAD,CAAUX,KAAMA,KACpBN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACgB,EAAD,CAAeJ,OAAQR,EAAKa,gBAChCnB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OACbH,EAAAC,EAAAC,cAACkB,EAAD,CAAMxB,KAAMU,EAAKe,gBC0CvBC,IAASC,OAAOvB,EAAAC,EAAAC,cA/CE,SAAAP,GAAA,IAAG6B,EAAH7B,EAAG6B,MAAH,OACjBxB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAChBH,EAAAC,EAAAC,cAAA,aACEsB,EAAMC,IAAI,SAAAnB,GAAI,OACdN,EAAAC,EAAAC,cAACwB,EAAD,CAAcC,IAAKrB,EAAKsB,GAAItB,KAAMA,SA2CtB,CAAUkB,MAhCR,CACjB,CACCI,GAAI,EACJhB,KAAM,MACNL,KAAM,SACNc,WAAY,sBACZF,aAAc,CACbJ,QAAS,mBAGV,CACCa,GAAI,EACJhB,KAAM,OACNL,KAAM,SACNc,WAAY,sBACZF,aAAc,CACbJ,QAAS,mBAGX,CACCa,GAAI,EACJhB,KAAM,SACNL,KAAM,OACNc,WAAY,sBACZF,aAAc,CACbJ,QAAS,sBAOmCc,SAASC,eAAe","file":"static/js/main.de031fa7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\n\nconst Time = ({ time }) => {\n\tconst timeString = moment(time).fromNow();\n\treturn (\n\t\t<span className=\"time\">\n\t\t\t{timeString}\n\t\t</span>\n\t\t);\n};\n\nTime.propTypes = {\n\ttime: PropTypes.string.isRequired\n}\n\nexport default Time;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\n\nfunction FileIcon({ file }) {\n\tlet  icon = 'fa-file-alt';\n\tif(file.type === 'folder') {\n\t\ticon = 'fa-folder';\n\t}\n\n\treturn (\n\t\t<span className=\"file-icon\">\n\t\t\t<i className={`fas ${icon}`}/>\n\t\t</span>\n\t\t)\n\t}\n\nFileIcon.propTypes = {\n\tfile: PropTypes.object.isRequired\n};\n\n\nexport default FileIcon","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileIcon from './icon';\n\nfunction FileName({ file }) {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<FileIcon file={file}/>\n\t\t\t<span className=\"file-name\">{file.name}</span>\n\t\t</React.Fragment>\n\t)\n}\n\nFileName.propTypes = {\n\tfile: PropTypes.object.isRequired\n}\n\nexport default FileName","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\n\n\nconst CommitMessage =  ({ commit }) => (\n\t<span className=\"commit-message\">\n\t\t{commit.message}\n\t</span>\n)\n\nCommitMessage.propTypes = {\n\tcommit: PropTypes.object.isRequired\n}\n\nexport default CommitMessage","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Time from './time';\nimport FileName from './filename';\nimport CommitMessage from './commitMessage';\n\nconst FileListItem = ({ file }) => (\n\t\t\t\t<tr className=\"file-list-item\">\n\t\t\t\t\t<td><FileName file={file}/></td>\n\t\t\t\t\t<td><CommitMessage commit={file.latestCommit}/></td>\n\t\t\t\t\t<td className=\"age\">\n\t\t\t\t\t\t<Time time={file.updated_at}/>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t);\n\t\nFileListItem.propTypes = {\n\tfile: PropTypes.object.isRequired\n};\n\n\n\n\nexport default FileListItem;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PropTypes from 'prop-types';\nimport FileListItem from './fileItem';\n\nconst  FileList = ({ files }) => (\n\t<table className=\"file-list\">\n\t\t<tbody>\n\t\t\t{files.map(file => (\n\t\t\t\t<FileListItem key={file.id} file={file}/>\n\t\t\t))}\n\t\t</tbody>\n\t</table>\n\t);\nFileList.propTypes = {\n\tfiles: PropTypes.array\n};\n\n\n\nconst testFiles = [\n\t{\n\t\tid: 1,\n\t\tname: 'src',\n\t\ttype: 'folder',\n\t\tupdated_at: \"2018-12-12 16:38:26\",\n\t\tlatestCommit: {\n\t\t\tmessage: 'Initial commit'\n\t\t}\n\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tname: 'test',\n\t\t\ttype: 'folder',\n\t\t\tupdated_at: \"2018-12-12 17:43:30\",\n\t\t\tlatestCommit: {\n\t\t\t\tmessage: 'Initial commit'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tname: 'README',\n\t\t\ttype: 'file',\n\t\t\tupdated_at: \"2018-12-12 20:02:57\",\n\t\t\tlatestCommit: {\n\t\t\t\tmessage: 'Added a readme'\n\t\t\t}\n\t\t},\n];\n\n\n\nReactDOM.render(<FileList files={testFiles} />, document.getElementById('root'));\n\n"],"sourceRoot":""}